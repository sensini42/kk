BLEU=1
ORANGE=2
VERT=0
AUTRE=3
coul=["VERT","BLEU","ORANGE","AUTRE"]

def couleur((i,j,k)):
    if(k>i and k>j):
        return BLEU
    else:
        if(j>i and j>k):
            return VERT
        else:
            if(i>j and j> k):
                return ORANGE
            else:
                return AUTRE


import Image
import sys

if len(sys.argv)==1:
    print "Usage: python tubu.py fichier.jpg [x y]"
    sys.exit(0)


img=Image.open(sys.argv[1])

if len(sys.argv)>2:
    x=int(sys.argv[2])
    y=int(sys.argv[3])
else:
    x=230
    y=420


a=img.crop((x,y,x+280,y+140))

l=[[0]*7 for i in range(7)]


for i in range(7):
    for j in range(7):
        l[i][j]=couleur(a.getpixel((  140-20*i+20*j  , 10+10*i+10*j ))  )

#print l

c=[[]]
for i in l:
    c[0].extend(i)

print c


def mult(a,b):
 return [[sum(i*j for i, j in zip(row, col)) for col in zip(*b)] for row in a]


mi="""0 2 2 2 0 2 0 2 2 0 2 2 1 1 2 0 0 0 1 0 1 2 2 0 0 0 0 1 0 2 1 0 2 2 1 2 1 0 0 2 1 2 0 1 1 1 1 2 2
2 2 1 2 1 0 2 2 2 1 2 0 0 1 0 2 0 1 0 2 0 2 2 2 0 0 1 0 2 1 2 0 2 0 2 1 2 1 2 1 1 1 1 1 2 2 0 0 2
2 1 2 0 2 1 0 0 1 1 2 0 0 2 0 0 0 0 2 0 1 0 2 2 2 1 0 0 1 2 0 1 1 2 2 0 1 1 2 1 1 2 1 2 2 1 1 0 1
2 2 0 2 0 2 2 2 2 2 2 2 2 2 0 1 0 1 0 1 0 0 0 2 0 2 0 0 0 0 1 1 1 0 0 0 2 2 0 2 2 0 1 2 1 1 1 2 1
0 1 2 0 2 1 2 2 0 0 2 1 1 0 1 0 2 0 0 0 0 0 0 1 2 2 2 0 2 2 1 1 0 2 1 2 1 1 2 1 1 0 1 0 1 1 2 2 1
2 0 1 2 1 2 2 1 0 0 2 1 2 2 0 2 0 1 0 2 0 0 1 0 0 2 2 2 2 0 2 0 2 1 2 1 1 1 2 1 2 1 2 0 0 2 2 1 1
0 2 0 2 2 2 0 1 1 2 2 0 2 2 1 0 1 0 0 0 2 1 0 0 0 0 2 2 1 2 2 0 1 2 0 2 1 2 0 0 1 2 2 2 1 1 1 1 0
2 2 0 2 2 1 1 2 2 2 2 1 2 1 1 1 0 2 2 1 2 2 2 1 0 0 2 2 1 0 0 0 2 1 0 0 0 2 1 0 1 0 2 1 0 0 2 1 2
2 2 1 2 0 0 1 2 1 1 0 1 2 2 1 1 0 2 0 1 1 2 0 2 1 2 2 2 0 1 0 2 1 2 1 0 2 1 2 2 0 1 1 2 1 2 1 1 1
0 1 1 2 0 0 2 2 1 2 0 1 1 1 0 0 0 1 1 0 2 1 2 0 1 0 2 0 0 0 0 1 2 1 2 2 1 2 2 2 2 0 0 1 1 2 1 1 2
2 2 2 2 2 2 2 2 0 0 0 0 0 2 2 2 1 2 1 2 2 0 1 1 2 1 1 0 0 2 1 0 1 2 0 1 2 2 2 2 2 1 0 2 2 0 2 2 0
2 0 0 2 1 1 0 1 1 1 0 2 1 2 2 0 1 1 0 0 0 0 2 0 1 0 2 1 2 1 2 1 0 0 0 0 2 2 2 2 1 2 2 1 1 2 1 1 0
1 0 0 2 1 2 2 2 2 1 0 1 1 2 1 1 0 2 0 1 1 2 2 2 1 2 0 2 1 2 1 2 0 1 0 1 0 2 2 1 2 0 1 1 1 2 1 2 1
1 1 2 2 0 2 2 1 2 1 2 2 2 2 2 1 2 2 0 1 1 2 2 0 0 1 2 2 0 1 2 0 0 0 1 0 1 0 1 2 0 0 2 1 2 0 0 1 2
2 0 0 0 1 0 1 1 1 0 2 2 1 2 2 1 0 2 0 1 2 0 2 0 2 1 2 1 2 0 2 1 1 1 1 1 0 0 0 2 1 0 0 2 1 0 2 2 1
0 2 0 1 0 2 0 1 1 0 2 0 1 1 1 2 0 0 0 2 1 2 0 1 1 1 2 2 0 1 1 0 2 2 1 0 1 0 2 1 2 1 2 1 2 0 2 0 2
0 0 0 0 2 0 1 0 0 0 1 1 0 2 0 0 2 1 2 0 0 0 1 1 0 2 1 1 2 1 2 2 1 2 1 0 0 0 1 2 1 2 1 2 0 1 1 2 2
0 1 0 1 0 1 0 2 2 1 2 1 2 2 2 0 1 1 1 0 2 2 1 0 2 0 1 2 1 0 2 0 2 0 1 0 2 1 0 1 2 0 0 0 1 1 1 0 0
1 0 2 0 0 0 0 2 0 1 1 0 0 0 0 0 2 1 2 0 0 1 1 2 0 1 1 0 1 2 1 2 2 1 2 2 1 2 1 0 0 0 2 2 1 1 0 2 1
0 2 0 1 0 2 0 1 1 0 2 0 1 1 1 2 0 0 0 2 1 2 2 1 1 1 0 2 1 2 2 0 1 1 0 1 2 1 2 0 1 0 2 0 2 0 2 1 2
1 0 1 0 0 0 2 2 1 2 2 0 1 1 2 1 0 2 0 1 2 1 2 1 2 0 2 0 1 1 1 1 2 0 2 0 1 2 0 0 0 1 1 2 2 0 1 2 0
2 2 0 0 0 0 1 2 2 1 0 0 2 2 0 2 0 2 1 2 1 2 2 1 0 1 0 1 0 2 0 2 1 2 1 2 2 1 0 0 2 2 2 2 0 0 0 0 1
2 2 2 0 0 1 0 2 0 2 1 2 2 2 2 0 1 1 1 2 2 2 0 2 2 0 2 0 2 0 1 1 1 2 2 2 0 2 1 2 2 2 2 2 2 0 0 1 0
0 2 2 2 1 0 0 1 2 0 1 0 2 0 0 1 1 0 2 1 1 1 2 1 2 0 0 1 0 1 1 0 2 1 1 1 2 0 1 0 2 0 0 2 2 2 1 0 0
0 0 2 0 2 0 0 0 1 1 2 1 1 0 2 1 0 2 0 1 2 0 2 2 2 2 2 0 2 1 0 2 0 1 2 0 1 1 2 1 1 0 0 0 2 0 2 0 0
0 0 1 2 2 2 0 0 2 0 1 0 2 1 1 1 2 0 1 1 0 1 0 0 2 1 2 1 1 1 2 0 1 1 0 0 2 0 1 0 2 1 0 0 1 2 2 2 0
0 1 0 0 2 2 2 2 2 2 1 2 0 2 2 2 1 1 1 0 2 0 2 0 2 2 0 2 2 2 1 1 1 0 2 2 2 2 1 2 0 2 0 1 0 0 2 2 2
1 0 0 0 0 2 2 2 2 0 0 1 2 2 1 2 1 2 0 2 0 1 0 1 0 1 2 2 1 2 1 2 0 2 0 2 2 0 0 1 2 2 1 0 0 0 0 2 2
0 2 1 0 2 2 1 1 0 0 0 2 1 0 2 0 2 1 1 1 1 0 2 0 2 1 2 1 2 1 0 2 0 1 2 1 1 0 2 2 1 2 2 0 0 0 1 0 1
2 1 2 0 2 0 2 0 1 0 2 1 2 1 0 1 1 0 2 2 1 2 0 1 1 1 2 2 1 2 0 0 0 2 1 1 1 0 2 0 1 1 0 2 0 1 0 2 0
1 2 0 1 1 2 2 0 0 0 1 2 1 2 2 1 2 2 1 2 1 0 1 1 0 2 1 1 0 0 2 1 2 0 0 0 0 0 1 1 0 2 0 0 0 0 2 0 1
0 0 1 1 1 0 0 0 2 1 0 1 2 0 1 0 2 0 2 0 1 2 1 0 2 0 1 2 2 0 1 1 1 0 2 2 2 1 2 1 2 2 0 1 0 1 0 1 0
2 2 1 1 0 2 1 2 1 2 1 0 0 0 1 2 1 2 2 1 2 1 1 2 0 1 1 0 0 0 2 1 2 0 0 2 0 1 1 0 0 0 1 0 2 0 0 0 0
2 0 2 0 2 1 2 1 2 1 2 0 1 0 1 2 2 0 1 1 0 2 2 1 1 1 0 2 1 2 0 0 0 2 1 1 1 0 2 0 1 1 0 2 0 1 0 2 0
1 2 2 0 1 2 0 0 1 2 0 0 0 1 1 1 1 1 2 0 2 1 2 1 2 0 2 0 2 1 0 2 0 1 2 2 1 2 2 0 1 1 1 0 1 0 0 0 2
2 1 0 0 2 1 2 0 0 2 1 0 1 0 1 0 0 0 2 1 0 2 2 1 0 0 2 2 1 1 0 2 2 1 2 2 2 2 2 1 2 1 2 2 0 2 2 1 1
1 2 1 2 1 1 1 0 2 1 2 2 0 1 0 1 0 2 1 2 1 2 0 2 1 2 2 2 1 1 0 2 0 1 1 2 1 1 0 1 2 2 2 2 1 2 0 0 1
0 1 1 2 1 1 2 2 1 2 2 2 2 0 0 0 0 1 2 1 2 1 2 0 1 0 2 0 0 0 0 1 1 0 2 2 1 2 0 1 1 1 0 1 1 2 0 0 2
0 2 2 0 2 2 0 1 2 2 2 2 2 1 0 2 1 0 1 2 0 0 1 1 2 1 1 0 2 2 1 2 1 2 2 2 0 0 0 0 0 2 2 2 2 2 2 2 2
2 1 1 2 1 1 0 0 2 2 2 2 1 2 2 1 2 1 0 0 0 0 2 0 1 0 2 1 2 0 1 1 0 0 0 1 1 1 0 2 1 2 2 0 0 2 1 1 0
1 1 1 2 1 2 1 1 0 2 2 1 2 0 1 2 1 2 0 1 0 2 2 2 1 2 0 2 1 1 0 2 0 1 1 2 2 1 0 1 1 2 1 0 0 2 1 2 2
2 1 2 0 0 1 2 0 1 0 1 2 0 0 0 1 2 0 0 0 1 2 2 0 0 1 2 2 2 1 2 2 0 1 1 1 2 1 2 2 2 2 1 1 2 2 0 2 2
0 1 1 1 1 2 2 2 1 0 0 2 1 2 0 2 1 0 2 2 1 2 2 0 0 0 0 1 2 0 0 0 1 0 1 2 2 0 2 2 1 1 0 2 2 2 0 2 0
1 1 2 2 0 0 2 1 2 1 2 1 1 1 2 1 2 0 2 0 2 2 2 2 0 0 1 0 0 2 0 1 0 2 0 2 2 1 2 0 0 1 2 2 1 2 1 0 2
1 2 2 1 1 0 1 0 1 1 2 1 1 2 1 2 0 1 1 2 2 0 2 2 2 1 0 0 0 0 0 0 2 0 1 0 1 1 2 0 0 2 2 1 2 0 2 1 0
1 2 1 1 1 2 1 0 2 2 0 2 2 0 0 0 1 1 1 0 0 0 0 2 0 2 0 0 0 1 0 1 0 1 0 2 2 2 2 2 2 2 2 2 0 2 0 2 2
1 0 1 1 2 2 1 2 1 1 2 1 1 0 2 2 1 1 0 2 1 0 0 1 2 2 2 0 1 0 2 0 0 0 0 2 0 0 2 1 1 0 0 1 2 0 2 1 2
2 0 0 2 2 1 1 1 1 1 2 1 2 1 2 0 2 0 2 1 2 0 1 0 0 2 2 2 0 2 0 1 0 2 0 1 0 0 2 1 2 2 2 0 1 2 1 2 2
2 2 1 1 1 1 0 2 1 2 0 0 1 2 1 2 2 0 1 2 0 1 0 0 0 0 2 2 1 0 1 0 0 0 2 1 1 2 2 0 2 2 0 2 0 2 2 2 0"""

mi2=mi.split('\n')
mi3=[ [int(i) for i in j.split()] for j in mi2  ]

#la config qu'on a
c2=[[0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,
     0,0,0,0,0,2,1,
     0,0,0,0,0,1,0,
     0,0,0,0,0,0,0,
     0,0,0,0,0,0,0,
     0,0,0,0,0,0,2]]


#la resolution:
sol=[ (i%3) for i in mult(c,mi3)[0]]

for l in range(len(sol)):
    if (l%7==0):print '\n'
    print sol[l],


